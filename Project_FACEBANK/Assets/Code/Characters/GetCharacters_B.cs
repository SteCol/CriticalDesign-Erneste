using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEditor;
using System.IO;
using System;
using System.Linq;

//[ExecuteInEditMode]
public class GetCharacters_B : MonoBehaviour
{
    public bool GetCharactersComplete = false;

    [Header("A Whole Bunch Of Lists")]
    public string[] allPaths;
    public List<string> characterPaths;
    public List<string> profilePicPaths;

    //public List<string> words;
    public List<TextAsset> characterFiles;
    public List<Sprite> profilePics;

    [Header("Controls")]
    public bool getPaths;
    public bool getCharacters;
    public bool getInfo;
    public bool getDialog;
    public bool getQuestions;
    public bool getAnswers;
    public bool getStatusUpdates;
    public bool getFriendsList;
    public bool getProfilePic;
    public bool debug;

    [Header("Final Characters List")]
    public List<Character> characters = new List<Character>();


    // Use this for initialization
    void Start()
    {

        Debug1("==========GETCHARACTERS START=============");
        Debug1("==========GETTING PATHS=============");

        //Gets the character.txt files.
        if (getPaths)
        {
            GetPaths();
            GetFiles();
        }

        Debug1("==========GETTING CHARACTERS=============");
        //Start of the descipherer.
        if (getPaths)
            GetCharacters();

        Debug1("==========GETTING PROFILE PICS=============");
        //Get the profile pictures.
        if (getProfilePic)
            GetProfilePic();


        Debug1("==========GETCHARACTERS END=============");
        GetCharactersComplete = true;

        //GetComponent<FriendsList>().UpdateFriendsList();


    }

    public void GetPaths()
    {
        characterPaths.Clear();
        allPaths = Directory.GetFiles(Application.dataPath, "*", SearchOption.AllDirectories); //ALL the files in the assets folder.

        Debug2("Getting Paths");
        foreach (string p in allPaths)
        {
            if (p.Contains("Character_") && p.Contains(".txt") && !p.Contains("meta")) //Get the Character files.
            {
                characterPaths.Add(p);
                Debug3("Found character file at " + p);
                Debug3("Attempting to add Character " + p);
            }

            if (p.Contains("ProfilePic_") && !p.Contains("meta")) //Get the profile pics.
            {
                profilePicPaths.Add(p);
                Debug4("Found profile pic at" + p);
            }
        }
    }

    public void GetFiles() {

        foreach (string p in characterPaths)   //Get the character files

        {
            string output = p.Substring(p.IndexOf(',') + 1); //to get a 'Characters/Characters.txt path' (to be ready by Resoures.Load) I placed a ',' (not used in any other path).
            Debug3(output);
            output = output.Substring(0, output.Length - 4); //Removes '.txt'
                                                             //print(output);
            characterFiles.Add((TextAsset)Resources.Load("," + output, typeof(TextAsset))); //Takes the paths generated by 'output' and gets the Character.txt files.

        }

        foreach (string p in profilePicPaths)   //Get the character Profile pics

        {
            string output = p.Substring(p.IndexOf(',') + 1); //to get a 'Characters/ProfilePic.psd' path
            Debug3(output);
            output = output.Substring(0, output.Length - 4); //Removes '.psd'
                                                             //print(output);
            profilePics.Add((Sprite)Resources.Load("," + output, typeof(Sprite))); //Takes the paths generated by 'output' and gets the profilePic_.psd files.
        }
    }

    public void GetCharacters()
    {
        for (int f = 0; f < characterFiles.Count; f++) //for each path is characterPaths (character files).'f' being the index.
        {
            Debug2("(" + f + ") Getting character from file: " + characterPaths[f]);

            //Get each line in the file.

            characters.Add(new Character()); //For each Characters.txt file found make a new entry in the list.
            string[] line = characterFiles[f].text.Split(new string[] { "\n" }, StringSplitOptions.None); //Get each seperate line from the Characters.txt files.
            Debug3("Amount of lines in " + characterFiles[f].name + "'s file: " + line.Length.ToString());


            //Starts with getting [INFO].
            if (getInfo == true)
            {
                for (int l = 0; l < line.Length; l++) {
                    if (line[l].Contains("[Info]")) {
                        DebugSplit("Found [Info] for " + characterFiles[f].name);
                        if (l >= line.Length) {
                            for (int i = 0; i < 20; i++)
                            { //Amount of lines to check after it's found [INFO].
                                if (line[l + i].Contains("name:"))
                                {
                                    characters[f].name = line[i + l];
                                    Debug4("Name for '" + characterFiles[f].name + "' is now '" + characters[f].name + "'.");
                                }

                                if (line[l + i].Contains("value:"))
                                {
                                    characters[f].value = line[i + l];
                                    Debug4("Value for '" + characterFiles[f].name + "' is now '" + characters[f].value + "'.");
                                }

                                if (line[l + i].Contains("info:"))
                                {
                                    characters[f].info = line[i + l];
                                    Debug4("Info for '" + characterFiles[f].name + "' is now '" + characters[f].info + "'.");
                                }

                                if (line[l + i].Contains("age:"))
                                {
                                    characters[f].age = line[i + l];
                                    Debug4("Age for '" + characterFiles[f].name + "' is now '" + characters[f].age + "'.");
                                }
                            }
                        }
                    }
                }
            }
            else {
                Debug3("GetInfo is off");
            }


            if (getDialog == true)
            {
                for (int l = 0; l < line.Length; l++)
                {
                    if (line[l].Contains("[Dialog]"))
                    {
                        DebugSplit("Found [Dialog] for " + characterFiles[f].name);

                        /*
                        for (int i = 0; i < 20; i++)
                        { //Amount of lines to check after it's found [INFO].
                            if (line[l + i].Contains("name:"))
                            {
                                characters[f].name = line[i + l];
                                Debug4("Name for '" + characterFiles[f].name + "' is now '" + characters[f].name + "'.");
                            }
                        }
                        */
                    }
                }
            }
            else {
                Debug3("GetDialog is off");
            }

            //[FRIENDS]
            //[DIALOG]
            //[PERIOD_X]
            //Q
            //A
            //[STATUSUPDATES]
            //[PERIOD_X]
            //SU
            //C

        }
    }

    public void GetProfilePic()
    {

    }

    public void CheckFollowThrough()
    {

    }


    public void Debug1(string message)
    {
        if (debug)
            print(message);
    }

    public void Debug2(string message)
    {
        if (debug)
            print("     |--- " + message);
    }

    public void Debug3(string message)
    {
        if (debug)
            print("             |--- " + message);
    }

    public void Debug4(string message)
    {
        if (debug)
            print("                     |--- " + message);
    }

    public void Debug5(string message)
    {
        if (debug)
            print("                             |--- " + message);
    }

    public void Debug6(string message)
    {
        if (debug)
            print("                                       |--- " + message);
    }

    public void DebugSplit(string message)
    {
        if (debug)
            print("-------------------------" + message + "--------------------------------");
    }



}